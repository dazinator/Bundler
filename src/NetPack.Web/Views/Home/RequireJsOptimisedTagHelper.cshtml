@{
    ViewData["Title"] = "Multiple Compiled Typescript Files";
}

<p>
Netpack offers a RequireJS TagHelper for optimising AMD modules into a bundle using r.js optimiser, within your Razor pages directly:
<pre>
        &#x3C;require-js-optimise include=&#x22;amd/*.js, js/requireConfig.js&#x22;
                         require-js-src=&#x22;/lib/require.js/require.min.js&#x22;
                         main=&#x22;SomePage&#x22;
                         out-name=&#x22;built.js&#x22;
                         out-path=&#x22;/netpack&#x22;&#x3E;
        &#x3C;/require-js-optimise&#x3E;
</pre>


<ul>
    <li>
        include = A comma separated list of glob file patterns for the AMD format javascript files to be included in the requireJS optimisation build process.
    </li>
    <li>
        exclude = A comma separated list of glob file patterns for the AMD format javascript files to be excluded if they have been included by a greedy include glob pattern.
    </li>
    <li>
        main = the AMD module that is the entry point to be loaded on the page.
    </li>
    <li>
        out-name = the name of the optimised js file that is produced as the output of the build.
    </li>
    <li>
        out-path = the path where the optimised file (as specified by out-name) can be served.
    </li>
</ul>


<p>For example, on this page, these AMD modules have been loaded from an optimised file:</p>
<ul id="modules"></ul>


@section scripts
{


    @*<script data-main="/netpack/built.js" src="~/lib/require.js/require.min.js"></script>*@
    <require-js-optimise include="amd/*.js, js/requireConfig.js"
                         require-js-src="/lib/require.js/require.min.js"
                         main="SomePage"
                         out-name="built.js"
                         out-path="/netpack">
    </require-js-optimise>
    @*<script type="text/javascript" asp-src-include="/netpack/built.js"></script>*@

    @*<script type="text/javascript" src="/netpack/ts/Greeter.js"></script>
        <script type="text/javascript" src="/netpack/ts/Another.js"></script>*@

}